#define DEFAULT 0
#define SIMPLE  1
#define MEDIA   2
#define NUMBER  3
#define SYMBOL  4
#define SCROLL  5
#define SNIPE   6
#define FNCT    7

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <160>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&sk {
    quick-release;    
    release-after-ms = <2000>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        td_globe: tap_dance_globe {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_GLOBE";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp GLOBE>, <&kp LG(H)>, <&kp LG(TAB)>, <&kp LG(X)>;
        };    

        td_paste: tap_dance_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PASTE";
            #binding-cells = <0>;
            tapping-term-ms = <240>;
            bindings = <&kp LC(V)>, <&kp LG(LS(V))>, <&spaste>;
        };  

        td_cc: tap_dance_cut_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CUTCOPY";
            #binding-cells = <0>;
            tapping-term-ms = <240>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        }; 

        td_scroll: tap_dance_scroll {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SCROLL";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mo 5>, <&to 5>, <&to 6>, <&to 1>;
        }; 

        td_brackets: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKET";
            #binding-cells = <0>;
            tapping-term-ms = <240>;
            bindings = <&parenthesis>, <&bracket>, <&brace>;
        }; 

        td_clear: tap_dance_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CLEAR";
            #binding-cells = <0>;
            tapping-term-ms = <240>;
            bindings = <&clear>, <&clear2>;
        }; 

        td_quotes: tap_dance_quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES";
            #binding-cells = <0>;
            tapping-term-ms = <240>;
            bindings = <&dquotes>, <&squote>, <&lessgreaterthan>;
        }; 
    
        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };

        trademark: trademark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "trademark";
        };

        bullet: bullet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "bullet";
        };

        heart: heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "heart";
        };

        filter: filter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp DOWN &kp E>,
                <&macro_release>,
                <&kp LALT>;

            label = "filter";
        };

        highlight: highlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&kp LALT &kp N7 &kp W &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "highlight";
        };

        clear: clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&macro_press>,
                <&kp LSFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSFT>,
                <&macro_tap>,
                <&kp ENTER>,
                <&macro_tap>,
                <&kp ESCAPE>;

            label = "clear";
        };

        clear2: clear2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_tap>,
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_tap>,
                <&kp ESCAPE>;

            label = "clear2";
        };

        spaste: spaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
                = <&kp LG(LS(V))>
                , <&macro_wait_time 200>
                , <&kp LC(N1)>;
            label = "spaste";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "parenthesis";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "bracket";
        };

        brace: brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "brace";
        };

        lessgreaterthan: lessgreaterthan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
            label = "lessgreaterthan";
        };

        squote: squote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SINGLE_QUOTE &kp LEFT>;
            label = "squote";
        };

        dquotes: dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "dquotes";
        };

        sen: sen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp R &kp O &kp G &kp E &kp N2 &kp N2 &kp LS(B) &kp RET>;
            label = "SEN";
        };

        user: user {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp A &kp N &kp DOT &kp C &kp H &kp E &kp O &kp W &kp AT &kp R &kp C &kp I &kp DOT &kp R &kp O &kp G &kp E &kp R &kp S &kp DOT &kp C &kp A>;
            label = "user";
        };

        wife: wife {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp SPACE &kp L &kp O &kp V &kp E &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp LS(V) &kp I &kp C &kp T &kp O &kp R &kp I &kp A &kp EXCL &kp EXCL &kp EXCL>;
            label = "wife";
        };

        mapdoc: mapdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp B &kp DOT &kp G &kp Y &kp FSLH &kp X &kp D &kp G &kp V &kp R &kp N9>;
            label = "MAPDOC";
        };

        Estar: Estar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N8 &kp N3 &kp LS(A) &kp LS(A) &kp AMPS &kp Y &kp STAR &kp P>;
            label = "ESTAR";
        };
    };

    combos {
        compatible = "zmk,combos";

        zxENT {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
            layers = <0 6>;
        };

        mdotDEL {
            bindings = <&kp DELETE>;
            key-positions = <26 28>;
            layers = <0>;
        };

        puncLSFT {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <27 28>;
            layers = <0>;
        };

        xcLSFT {
            bindings = <&sk LSHIFT>;
            key-positions = <21 22>;
            layers = <0>;
        };

        bnDASH {
            bindings = <&kp MINUS>;
            key-positions = <24 25>;
            layers = <0>;
        };

        vmUNDERSCORE {
            bindings = <&kp UNDERSCORE>;
            key-positions = <23 26>;
            layers = <0>;
        };

        jkLCLK {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
            layers = <0 6>;
        };

        llRCLK {
            bindings = <&mkp RCLK>;
            key-positions = <19 18>;
            layers = <0 6>;
        };

        mmMCLK {
            bindings = <&mkp MCLK>;
            key-positions = <26 27>;
            layers = <0 6>;
        };

        zvTASKS {
            bindings = <&kp LC(LA(TAB))>;
            key-positions = <20 23>;
            layers = <0 6>;
        };

        xvSWITCH {
            bindings = <&kp LA(TAB)>;
            key-positions = <21 23>;
            layers = <0 6>;
        };

        extraRCLK {
            bindings = <&mkp RCLK>;
            key-positions = <31 32>;
            layers = <0>;
        };

        extraMCLK {
            bindings = <&mkp MCLK>;
            key-positions = <30 32>;
            layers = <0>;
        };

        mmCAPSWORD {
            bindings = <&caps_word>;
            key-positions = <14 15>;
            layers = <0>;
        };

        mmCAPSLOCK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <21 28 22 27>;
            layers = <0>;
        };

        cvMENU {
            bindings = <&kp K_APPLICATION>;
            key-positions = <22 23>;
            layers = <0 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "HOME";
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T                                &kp Y            &kp U        &kp I        &kp O            &kp P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &kp G                                &kp H            &mt RSHFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SQT
&kp Z           &kp X           &kp C        &kp V             &kp B                                &kp N            &kp M        &lt 5 COMMA  &kp DOT          &lt 7 SLASH
&td_globe       &mo 5           &mkp LCLK    &lt 2 ESCAPE      &lt 5 SPACE  &lt 6 TAB  &lt 4 ENTER  &lt 3 BACKSPACE                                             &td_scroll
            >;
        };

        simple_layer {
            bindings = <
&kp Q           &kp W         &kp E      &kp R       &kp T                            &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D      &kp F       &kp G                            &kp H            &kp J  &kp K      &kp L    &kp APOS
&kp Z           &kp X         &kp C      &kp V       &kp B                            &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LEFT_SHIFT  &kp LEFT_GUI  &kp LCTRL  &kp ESCAPE  &kp SPACE  &kp TAB  &lt 4 ENTER  &lt 3 BACKSPACE                             &to 0
            >;

            label = "SIMPLE";
        };

        media_layer {
            label = "MEDIA";
            bindings = <
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                       &trans            &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRI_INC    &trans
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                        &trans            &kp C_PREVIOUS  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &kp C_NEXT
&trans   &bt BT_PRV     &bt BT_NXT     &trans         &trans                                    &trans            &kp LS(HOME)    &trans                &trans           &kp LS(END)
&bootloader    &trans         &trans         &kp ESCAPE     &kp SPACE      &kp TAB  &kp C_MUTE  &kp C_PLAY_PAUSE                                                         &trans
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET                           &kp KP_NUMLOCK  &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp STAR
&kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                                   &to 6           &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_N0
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH                               &to 5           &kp KP_NUMBER_1  &kp KP_N2  &kp KP_N3  &kp MINUS
&kp LEFT_ALT      &kp SPACE     &kp FSLH      &kp DOT       &kp NUMBER_0       &kp MINUS  &kp KP_ENTER  &kp BSPC                                               &bootloader
            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACKET      &kp RIGHT_BRACE                                &user       &sen    &Estar      &heart   &wife
&kp COLON       &kp DOLLAR     &kp PERCENT   &kp CARET             &kp PLUS                                       &highlight  &td_brackets  &td_quotes   &trans   &trans
&kp TILDE       &kp EXCL       &kp AT        &kp HASH              &kp PIPE                                       &td_clear   &trans  &trademark  &bullet  &filter
&trans          &trans         &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &trans  &trans                                   &mapdoc
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp LC(PAGE_UP)  &td_cc     &td_paste  &kp LC(PAGE_DOWN)  &kp LC(HOME)                  &trans      &key_repeat     &td_cc          &td_paste     &to 0
&kp LEFT_GUI     &kp LALT   &kp LCTRL  &kp LSHFT          &kp LC(END)                   &caps_word  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&kp LEFT         &kp UP     &kp DOWN   &kp RIGHT          &trans                        &kp DELETE  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
&mkp RCLK        &mkp MCLK  &mkp LCLK  &kp ESC            &to 6         &kp TAB  &kp ENTER  &kp BACKSPACE                                         &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans          &td_cc          &td_paste     &trans           &trans                             &trans           &trans     &td_cc          &td_paste      &to 0
&kp LEFT_GUI    &kp LEFT_ALT    &kp LCTRL     &kp LEFT_SHIFT   &trans                             &mkp MB4         &mkp LCLK  &mkp MCLK       &mkp RCLK      &mkp MB5
&mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans                             &trans           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
&mkp RCLK       &mkp MCLK       &mkp LCLK     &kp ESCAPE       &to 5        &trans  &kp CAPSLOCK  &kp PRINTSCREEN                                            &trans
            >;
        };

        function_layer {
            bindings = <
&kp F12     &kp F7        &kp F8      &kp F9   &kp INS                          &trans  &trans           &trans                &trans            &trans
&kp F11     &kp F4        &kp F5      &kp F6   &kp SCROLLLOCK                   &trans  &kp RIGHT_SHIFT  &kp RCTRL             &kp RIGHT_ALT     &kp RIGHT_GUI
&kp F10     &kp F1        &kp F2      &kp F3   &kp PAUSE_BREAK                  &trans  &trans           &kp C_AL_MY_COMPUTER  &kp K_CALCULATOR  &kp C_AL_MAIL
&bt BT_CLR  &out OUT_TOG  &kp LA(F4)  &kp ESC  &kp SPACE        &kp TAB  &trans  &trans                                                          &trans
            >;

            label = "FUNCTION";
        };
    };
};
