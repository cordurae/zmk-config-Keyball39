#define DEFAULT 0
#define GAME    1
#define SIMPLE  2
#define MEDIA   3
#define NUMBER  4
#define SYMBOL  5
#define SNIPE   6
#define SCROLL  7
#define FNCT    8
#define LAYERS  9

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <100>;
    flavor = "balanced";
    quick-tap-ms = <180>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <180>;
};

&sk {
    quick-release;
    release-after-ms = <2000>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    behaviors {
        sdash: special_dash {
            compatible = "zmk,behavior-hold-tap";
            label = "SDASH";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;
        };

        xmclk: special_middle_click {
            compatible = "zmk,behavior-hold-tap";
            label = "XMCLK";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <180>;
            bindings = <&mo>, <&mkp>;
        };

        td_globe: tap_dance_globe {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_GLOBE";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp GLOBE>, <&kp LG(TAB)>, <&ipad_control>;
        };

        td_globe_2: tap_dance_globe_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_GLOBE_2";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp LG(SPACE)>, <&ipad_dock>, <&ipad_siri>;
        };

        ipad_tools: tap_dance_ipad_tools {
            compatible = "zmk,behavior-tap-dance";
            label = "ipad_tools";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings =
                <&ipad_home>,
                <&ipad_switcher>,
                <&ipad_library>;
        };

        xpaste: special_paste {
            compatible = "zmk,behavior-hold-tap";
            label = "X_PASTE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            bindings = <&spaste>, <&kp>;
        };

        xcopy: special_copy {
            compatible = "zmk,behavior-hold-tap";
            label = "X_COPY";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;
        };

        td_paste: tap_dance_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PASTE";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&xpaste 0 LC(V)>, <&kp LG(LS(V))>;
        };

        td_cc: tap_dance_cut_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CUTCOPY";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&xcopy LC(X) LC(C)>;
        };

        xlt: goto_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "X_LT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            bindings = <&mo>, <&kp>;
        };

        slt: simple_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "S_LT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&to>;
        };

        tdu1: tap_dance_ultrawide_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ULTRAWIDE_1";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LC(LG(LA(N1)))>;
        };

        tdu2: tap_dance_ultrawide_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ULTRAWIDE_2";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LC(LG(LA(N2)))>;
        };

        tdu3: tap_dance_ultrawide_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ULTRAWIDE_3";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LC(LG(LA(N3)))>;
        };

        tdu4: tap_dance_ultrawide_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ULTRAWIDE_4";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LC(LG(LA(N4)))>;
        };

        tdu5: tap_dance_ultrawide_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ULTRAWIDE_5";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LC(LG(LA(N5)))>;
        };

        xquotes: special_quotes {
            compatible = "zmk,behavior-hold-tap";
            label = "X_QUOTES";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <50>;
            quick-tap-ms = <120>;
            bindings = <&dquotes>, <&squote>;
        };

        xbrackets: special_brackets {
            compatible = "zmk,behavior-hold-tap";
            label = "X_BRACKETS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <50>;
            quick-tap-ms = <120>;
            bindings = <&bracket>, <&parenthesis>;
        };

        td_brackets: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKET";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&xbrackets 0 0>, <&brace>;
        };

        td_quotes: tap_dance_quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&xquotes 0 0>, <&lessgreaterthan>;
        };

        xclear: special_clear {
            compatible = "zmk,behavior-hold-tap";
            label = "X_CLEAR";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <70>;
            quick-tap-ms = <120>;
            bindings = <&clear2>, <&clear>;
        };

        x_end: special_end {
            compatible = "zmk,behavior-hold-tap";
            label = "X_END";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <100>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;
        };

        x_ipl: special_ipad_left {
            compatible = "zmk,behavior-hold-tap";
            label = "X_IPAD_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            bindings = <&ipad_slidemoveleft>, <&ipad_tileleft>;
        };

        x_ipr: special_ipad_right {
            compatible = "zmk,behavior-hold-tap";
            label = "X_IPAD_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            bindings = <&ipad_slidemoveright>, <&ipad_tileright>;
        };

        ipad_left: tap_dance_ipad_left {
            compatible = "zmk,behavior-tap-dance";
            label = "ipad_left";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&ipad_prevapp>, <&x_ipl 0 0>;
        };

        ipad_right: tap_dance_ipad_right {
            compatible = "zmk,behavior-tap-dance";
            label = "ipad_right";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&ipad_nextapp>, <&x_ipr 0 0>;
        };

        ipad_slide_over: tap_dance_ipad_slide_over {
            compatible = "zmk,behavior-tap-dance";
            label = "ipad_slide_over";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings =
                <&ipad_slide>,
                <&ipad_slidenextwindow>,
                <&ipad_full>,
                <&ipad_replace>;
        };

        td_keys: tap_dance_keys {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_KEYS";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp J>, <&kp T>, <&kp G>, <&kp B>;
        };

        td_game: tap_dance_game {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_GAME";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp LA(F1)>, <&kp LS(LA(F1))>, <&kp LA(Z)>, <&kp LA(F9)>, <&kp LA(R)>;
        };
    };

    macros {
        trademark: trademark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "trademark";
        };

        bullet: bullet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N4 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "bullet";
        };

        emdash: emdash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "emdash";
        };

        heart: heart {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "heart";
        };

        filter: filter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp DOWN &kp E>,
                <&macro_release>,
                <&kp LALT>;

            label = "filter";
        };

        highlight: highlight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings = <&kp LALT &kp N7 &kp W &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp ENTER>;
            label = "highlight";
        };

        clear: clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_wait_time 300>,
                <&macro_press>,
                <&kp LSFT>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LSFT>,
                <&macro_tap>,
                <&kp ENTER>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_tap>,
                <&kp ESCAPE>;

            label = "clear";
        };

        spaste: spaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(V))>, <&macro_wait_time 400>, <&kp LC(N1)>;

            label = "spaste";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "parenthesis";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "bracket";
        };

        brace: brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "brace";
        };

        lessgreaterthan: lessgreaterthan {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
            label = "lessgreaterthan";
        };

        squote: squote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SINGLE_QUOTE &kp LEFT>;
            label = "squote";
        };

        dquotes: dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "dquotes";
        };

        t_mute: t_mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK &kp LC(LS(M))>;
            label = "t_mute";
        };

        ipad_home: ipad_home {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_home";
        };

        ipad_dock: ipad_dock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_dock";
        };

        ipad_library: ipad_library {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LSHIFT &kp GLOBE>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LSHIFT &kp GLOBE>;

            label = "ipad_library";
        };

        ipad_siri: ipad_siri {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_siri";
        };

        ipad_control: ipad_control {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_control";
        };

        ipad_switcher: ipad_switcher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp UP>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_switcher";
        };

        ipad_nextapp: ipad_nextapp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_nextapp";
        };

        ipad_prevapp: ipad_prevapp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_prevapp";
        };

        ipad_full: ipad_full {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_full";
        };

        ipad_tileleft: ipad_tileleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "ipad_tileleft";
        };

        ipad_tileright: ipad_tileright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "ipad_tileright";
        };

        ipad_replace: ipad_replace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp DOWN>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "ipad_replace";
        };

        ipad_slide: ipad_slide {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp BSLH>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "ipad_slide";
        };

        ipad_slidemoveleft: ipad_slidemoveleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp GLOBE>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LALT &kp GLOBE>;

            label = "ipad_slidemoveleft";
        };

        ipad_slidemoveright: ipad_slidemoveright {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp GLOBE>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LALT &kp GLOBE>;

            label = "ipad_slidemoveright";
        };

        ipad_slidenextwindow: ipad_slidenextwindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <30>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp GLOBE>,
                <&macro_tap>,
                <&kp BSLH>,
                <&macro_release>,
                <&kp LGUI &kp GLOBE>;

            label = "ipad_slidenextwindow";
        };

        sen: sen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp R &kp O &kp G &kp E &kp N2 &kp N2 &kp LS(C) &kp F &kp RET>;
            label = "SEN";
        };

        user: user {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp E &kp A &kp N &kp DOT &kp C &kp H &kp E &kp O &kp W &kp AT &kp R &kp C &kp I &kp DOT &kp R &kp O &kp G &kp E &kp R &kp S &kp DOT &kp C &kp A>;
            label = "user";
        };

        wife: wife {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp SPACE &kp L &kp O &kp V &kp E &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp LS(V) &kp I &kp C &kp T &kp O &kp R &kp I &kp A &kp EXCL &kp EXCL &kp EXCL>;
            label = "wife";
        };

        mapdoc: mapdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp B &kp DOT &kp G &kp Y &kp FSLH &kp X &kp D &kp G &kp V &kp R &kp N9>;
            label = "MAPDOC";
        };

        Estar: Estar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N8 &kp N3 &kp LS(A) &kp LS(A) &kp AMPS &kp Y &kp STAR &kp EXCL>;
            label = "ESTAR";
        };
    };

    combos {
        compatible = "zmk,combos";

        mdot_DEL {
            bindings = <&kp DELETE>;
            key-positions = <26 28>;
            layers = <0>;
            timeout-ms = <60>;
        };

        punc_LSFT {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <27 28>;
            layers = <0>;
            timeout-ms = <60>;
        };

        xc_LSFT {
            bindings = <&sk LSHIFT>;
            key-positions = <21 22>;
            layers = <0>;
            timeout-ms = <60>;
        };

        sticky_CTRL {
            bindings = <&sk LCTRL>;
            key-positions = <0 9>;
            layers = <0>;
            require-prior-idle-ms = <400>;
            timeout-ms = <60>;
        };

        sticky_ALT {
            bindings = <&sk LEFT_ALT>;
            key-positions = <20 29>;
            layers = <0>;
            require-prior-idle-ms = <400>;
            timeout-ms = <60>;
        };

        vm_UNDERSCORE_DASH {
            bindings = <&sdash UNDERSCORE MINUS>;
            key-positions = <23 26>;
            layers = <0>;
            require-prior-idle-ms = <200>;
            timeout-ms = <60>;
        };

        jk_LCLK {
            bindings = <&mkp LCLK>;
            key-positions = <16 17>;
            layers = <0 1 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <70>;

        };

        ll_RCLK {
            bindings = <&mkp RCLK>;
            key-positions = <19 18>;
            layers = <0 1 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <70>;
        };

        mm_MCLK {
            bindings = <&mkp MCLK>;
            key-positions = <26 27>;
            layers = <0 1 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <60>;
        };

        zv_TASKS {
            bindings = <&kp LC(LA(TAB))>;
            key-positions = <20 23>;
            layers = <0 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <70>;
        };

        xv_SWITCH {
            bindings = <&kp LA(TAB)>;
            key-positions = <21 23>;
            layers = <0 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <70>;
        };

        mslash_LAUNCHER {
            bindings = <&kp LA(SPACE)>;
            key-positions = <26 29>;
            layers = <0 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <70>;
        };

        cv_MENU {
            bindings = <&kp K_CONTEXT_MENU>;
            key-positions = <22 23>;
            layers = <0 6>;
            require-prior-idle-ms = <200>;
            timeout-ms = <60>;
        };

        quick_clipboard {
            bindings = <&kp LG(V)>;
            key-positions = <19 23>;
            layers = <0>;
            require-prior-idle-ms = <400>;
            timeout-ms = <60>;
        };

        quick_clipboard_2 {
            bindings = <&kp LG(V)>;
            key-positions = <10 23>;
            layers = <0>;
            require-prior-idle-ms = <400>;
            timeout-ms = <60>;
        };

        quick_home {
            bindings = <&x_home LS(HOME) HOME>;
            key-positions = <26 34>;
            timeout-ms = <70>;
            require-prior-idle-ms = <500>;
            layers = <0>;
        };

        quick_end {
            bindings = <&x_end LS(END) END>;
            key-positions = <29 34>;
            timeout-ms = <70>;
            require-prior-idle-ms = <500>;
            layers = <0>;
        };

        quick_repeat {
             bindings = <&key_repeat>;
             key-positions = <15 34>;
             timeout-ms = <70>;
             require-prior-idle-ms = <500>;
             layers = <0>;
         };

        extra_LCLK {
            bindings = <&mkp LCLK>;
            key-positions = <16 35>;
            layers = <0>;
            timeout-ms = <70>;
            slow-release;
        };

        extra_LCLK_2 {
            bindings = <&mkp LCLK>;
            key-positions = <14 35>;
            layers = <0>;
            timeout-ms = <70>;
            slow-release;
        };

        extra_LCLK_3 {
            bindings = <&mkp LCLK>;
            key-positions = <13 35>;
            layers = <0>;
            slow-release;
        };

        extra_RCLK {
            bindings = <&mkp RCLK>;
            key-positions = <18 35>;
            layers = <0>;
            timeout-ms = <70>;
            slow-release;
        };

        extra_RCLK_2 {
            bindings = <&mkp RCLK>;
            key-positions = <30 32>;
            timeout-ms = <70>;
            layers = <0>;
        };

        extra_MB4 {
            bindings = <&mkp MB4>;
            key-positions = <15 35>;
            timeout-ms = <70>;
            layers = <0>;
        };

        extra_MB5 {
            bindings = <&mkp MB5>;
            key-positions = <19 35>;
            timeout-ms = <70>;
            layers = <0>;
        };

        extra_COPY {
            bindings = <&td_cc>;
            key-positions = <7 35>;
            timeout-ms = <70>;
            layers = <0>;
        };

        extra_PASTE {
            bindings = <&td_paste>;
            key-positions = <8 35>;
            timeout-ms = <70>;
            layers = <0>;
        };

        easy_exit {
            bindings = <&to 0>;
            key-positions = <31 32>;
            layers = <0 1 2 3 4 5 6 7 8 9>;
        };

        game_sticky {
            bindings = <&sl 2>;
            key-positions = <30 32>;
            layers = <1>;
        };

        game_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <33 23>;
            layers = <1>;
        };

        home_to_game {
            bindings = <&to 1>;
            key-positions = <30 31>;
            layers = <0>;
        };

        game_to_home {
            bindings = <&to 0>;
            key-positions = <30 31>;
            layers = <1>;
        };

       game_map {
            bindings = <&kp M>;
            key-positions = <20 22>;
            layers = <1>;
            timeout-ms = <60>;
        };

        quick_globe {
            bindings = <&td_globe>;
            key-positions = <20 21>;
            timeout-ms = <70>;
            require-prior-idle-ms = <400>;
            layers = <0>;
        };

        quick_ipad_tools {
            bindings = <&ipad_tools>;
            key-positions = <28 29>;
            timeout-ms = <70>;
            require-prior-idle-ms = <400>;
            layers = <0>;
        };

        quick_ipad_extra {
            bindings = <&td_globe_2>;
            key-positions = <20 21 28 29>;
            timeout-ms = <70>;
            require-prior-idle-ms = <400>;
            layers = <0>;
        };

        mm_CAPSWORD {
            bindings = <&caps_word>;
            key-positions = <21 28>;
            layers = <0>;
            timeout-ms = <70>;
        };

        mm_CAPS {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 27>;
            layers = <0>;
            timeout-ms = <70>;
        };

        quick_mute {
            bindings = <&t_mute>;
            key-positions = <23 33>;
            layers = <0 3>;
            require-prior-idle-ms = <500>;
        };

        quick_layers {
            bindings = <&sl 9>;
            key-positions = <15 37>;
            layers = <0 1 2 3 4 5 6 7 8 9>;
            require-prior-idle-ms = <400>;
            timeout-ms = <70>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "HOME";
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T                                &kp Y            &kp U        &kp I         &kp O            &kp P
&mt LGUI A      &mt LALT S      &mt LCTRL D  &mt LSHFT F       &kp G                                &kp H            &mt RSHFT J  &mt RCTRL K   &mt RALT L       &mt RGUI SQT
&kp Z           &kp X           &kp C        &kp V             &kp B                                &kp N            &kp M        &xlt 7 COMMA  &xlt 2 DOT       &xlt 8 SLASH
&to 7           &mo 7           &mkp LCLK    &lt 3 ESCAPE      &lt 7 SPACE  &lt 6 TAB  &lt 5 ENTER  &lt 4 BACKSPACE                                              &to 7
            >;
        };

        gaming_layer {
            bindings = <
&kp N1          &kp Q       &kp W    &kp E         &kp R                                 &kp Y            &kp U  &kp I      &kp O    &kp P
&kp LEFT_SHIFT  &kp A       &kp S    &kp D         &kp F                                 &kp H            &lt 3 J &kp K     &kp L    &lt 3 APOS
&kp Y           &kp Z       &kp X    &kp C         &kp V                                 &kp N            &kp M  &kp COMMA  &kp DOT  &lt 8 SLASH
&kp TAB         &td_keys    &xlt 4 N2 &kp N3       &kp SPACE  &kp N4  &lt 5 ENTER        &lt 4 BACKSPACE                             &td_game
            >;

            label = "GAME";
        };

        simple_layer {
            bindings = <
&kp Q           &kp W         &kp E      &kp R       &kp T                            &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A           &kp S         &kp D      &kp F       &kp G                            &kp H            &kp J  &kp K      &kp L    &kp APOS
&kp Z           &kp X         &kp C      &kp V       &kp B                            &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LSHFT       &kp LGUI      &kp LCTRL  &lt 3 ESC   &lt 7 SPACE  &lt 6 TAB  &lt 5 ENTER  &lt 4 BACKSPACE                         &kp LSHFT
            >;

            label = "SIMPLE";
        };

        media_layer {
            label = "MEDIA";
            bindings = <
&bt BT_DISC 0  &bt BT_DISC 1     &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                       &trans            &trans          &kp C_BRI_DEC      &kp C_BRI_INC    &trans
&bt BT_SEL 0   &bt BT_SEL 1      &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                        &key_repeat       &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT
&trans         &trans            &trans         &trans         &trans                              &trans            &trans          &trans             &trans           &trans
&bootloader    &trans            &trans         &kp ESCAPE     &kp SPACE      &kp TAB  &kp C_MUTE  &kp C_PLAY_PAUSE                                                      &trans
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET                           &trans          &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp STAR
&kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                                   &sl 9           &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_N0
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH                               &trans          &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp MINUS
&kp LEFT_ALT      &kp FSLH      &kp SPACE     &kp DOT       &kp NUMBER_0       &kp MINUS  &kp KP_ENTER  &trans                                                 &bootloader
            >;
        };

        symbol_layer {
            label = "SYMBOL";
            bindings = <
&kp LEFT_BRACE  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_BRACKET      &kp RIGHT_BRACE                                &user       &sen          &Estar      &heart   &wife
&kp COLON       &kp DOLLAR     &kp PERCENT   &kp CARET             &kp PLUS                                       &highlight  &td_brackets  &td_quotes  &trans   &trans
&kp TILDE       &kp EXCL       &kp AT        &kp HASH              &kp PIPE                                       &clear      &emdash       &trademark  &bullet  &filter
&ipad_slide_over &ipad_left    &ipad_right   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &trans  &trans                                         &mapdoc
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                           &kp PRINTSCREEN  &trans          &td_cc          &td_paste     &trans
&kp LGUI        &kp LALT      &kp LCTRL       &kp LSHFT        &mkp LCLK                        &mkp MB4         &mkp LCLK       &xmclk 7 MCLK   &mkp RCLK     &mkp MB5
&trans          &trans        &trans          &trans           &trans                           &trans           &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT
&mkp RCLK       &mkp MCLK     &mkp LCLK       &kp ESCAPE       &kp SPACE     &trans  &kp ENTER  &kp BACKSPACE                                                  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&kp LA(ESC)   &td_cc     &td_paste  &kp LS(LA(ESC))  &trans                      &trans         &trans          &td_cc          &td_paste     &trans
&kp LGUI      &kp LALT   &kp LCTRL  &kp LSHFT        &mkp LCLK                   &key_repeat    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&tdu1         &tdu2      &tdu3      &tdu4            &tdu5                       &trans         &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END
&to 0         &mkp MCLK  &mkp LCLK  &kp ESC          &trans  &kp TAB  &kp ENTER  &kp BACKSPACE                                                &to 0
            >;
        };

        function_layer {
            bindings = <
&kp F12     &kp F7        &kp F8      &kp F9   &kp KP_NUMLOCK                          &trans        &trans           &trans                &trans         &trans
&kp F11     &kp F4        &kp F5      &kp F6   &kp SCROLLLOCK                          &kp INS       &kp RSHIFT       &kp RCTRL             &kp RALT       &kp RGUI
&kp F10     &kp F1        &kp F2      &kp F3   &kp PAUSE_BREAK                         &kp C_AL_WWW  &kp C_AL_MAIL    &kp C_AL_MY_COMPUTER  &kp C_AL_CALC  &trans
&bt BT_CLR  &out OUT_TOG  &kp LA(F4)  &kp ESC  &kp SPACE        &kp TAB  &kp CAPSLOCK  &kp DELETE                                                          &kp C_AL_CONTROL_PANEL
            >;

            label = "FUNCTION";
        };

        layers_layer {
            bindings = <
&trans        &to 7       &to 8    &to 9    &trans                          &trans        &trans           &trans              &trans         &trans
&trans        &to 4       &to 5    &to 6    &trans                          &trans        &sk RSHFT        &sk RCTRL           &sk RALT       &sk RGUI
&trans        &to 1       &to 2    &to 3    &trans                          &trans        &trans           &trans              &trans         &trans
&trans        &trans      &trans   &trans   &to 0          &trans  &trans   &trans                                                            &trans
            >;

            label = "LAYERS";
        };
    };
};
